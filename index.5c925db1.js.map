{"mappings":"ACoBA,IAAI,EAAO,SAAS,aAAa,CAAC,SAE7B,IAEH,AADA,CAAA,EAAO,SAAS,aAAa,CAAC,MAA9B,EACK,EAAE,CAAG,OAEV,SAAS,IAAI,CAAC,qBAAqB,CAAC,aAAc,IAqBpD,AAlBA,SAAS,EAAW,CAAO,CAAE,CAAI,EAE/B,IAAM,EAAK,SAAS,aAAa,CAAC,MAE7B,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,OAAO,IAAI,CAAC,EAAA,CAAA,OAAA,QAAA,CAAA,GAAzB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAgC,CAAhC,IAAM,EAAN,EAAA,KAAA,CACG,EAAK,SAAS,aAAa,CAAC,KAElC,CAAA,EAAG,WAAW,CAAG,EACjB,EAAG,qBAAqB,CAAC,YAAa,GAEb,UAArB,OAAO,CAAI,CAAC,EAAI,EAAiB,OAAO,IAAI,CAAC,CAAI,CAAC,EAAI,EAAE,MAAM,CAAG,GACnE,EAAW,EAAI,CAAI,CAAC,EAAI,CAE5B,C,C,M,E,CATK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAWL,EAAQ,qBAAqB,CAAC,YAAa,EAC7C,EAEW,EA7CE,CACX,MAAO,CACL,KAAM,CAAC,EACP,QAAS,CAAC,CACZ,EAEA,MAAO,CACL,IAAK,CACH,OAAQ,CAAC,EACT,WAAY,CAAC,CACf,EACA,OAAQ,CACN,OAAQ,CAAC,EACT,UAAW,CAAC,CACd,CACF,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar food = {\n    Drink: {\n        Wine: {},\n        Schnaps: {}\n    },\n    Fruit: {\n        Red: {\n            Cherry: {},\n            Strawberry: {}\n        },\n        Yellow: {\n            Banana: {},\n            Pineapple: {}\n        }\n    }\n};\nvar tree = document.querySelector(\"#tree\");\nif (!tree) {\n    tree = document.createElement(\"div\");\n    tree.id = \"tree\";\n    document.body.insertAdjacentElement(\"afterbegin\", tree);\n}\nfunction createTree(element, data) {\n    // WRITE YOUR CODE HERE\n    var ul = document.createElement(\"ul\");\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = Object.keys(data)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var key = _step.value;\n            var li = document.createElement(\"li\");\n            li.textContent = key;\n            ul.insertAdjacentElement(\"beforeend\", li);\n            if (typeof data[key] === \"object\" && Object.keys(data[key]).length > 0) createTree(li, data[key]);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    element.insertAdjacentElement(\"beforeend\", ul);\n}\ncreateTree(tree, food);\n\n//# sourceMappingURL=index.5c925db1.js.map\n","'use strict';\n\nconst food = {\n  Drink: {\n    Wine: {},\n    Schnaps: {},\n  },\n\n  Fruit: {\n    Red: {\n      Cherry: {},\n      Strawberry: {},\n    },\n    Yellow: {\n      Banana: {},\n      Pineapple: {},\n    },\n  },\n};\n\nlet tree = document.querySelector('#tree');\n\nif (!tree) {\n  tree = document.createElement('div');\n  tree.id = 'tree';\n\n  document.body.insertAdjacentElement('afterbegin', tree);\n}\n\nfunction createTree(element, data) {\n  // WRITE YOUR CODE HERE\n  const ul = document.createElement('ul');\n\n  for (const key of Object.keys(data)) {\n    const li = document.createElement('li');\n\n    li.textContent = key;\n    ul.insertAdjacentElement('beforeend', li);\n\n    if (typeof data[key] === 'object' && Object.keys(data[key]).length > 0) {\n      createTree(li, data[key]);\n    }\n  }\n\n  element.insertAdjacentElement('beforeend', ul);\n}\n\ncreateTree(tree, food);\n"],"names":["tree","document","querySelector","createElement","id","body","insertAdjacentElement","createTree","element","data","ul","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Object","keys","Symbol","iterator","next","done","key","value","li","textContent","length","err","return","Drink","Wine","Schnaps","Fruit","Red","Cherry","Strawberry","Yellow","Banana","Pineapple"],"version":3,"file":"index.5c925db1.js.map"}